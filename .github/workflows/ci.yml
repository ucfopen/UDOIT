name: Build UDOIT 3 Docker Image

on:
  push:
    branches:
      - main
      - 'stable/*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['8.2']
        node-version: [16.19.0]
    steps:
      - uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Change String Case
        id: case
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.repository }}

      - name: Display repository name
        run: echo ${{ steps.case.outputs.lowercase }}

      - name: Find-and-replace strings
        id: slash
        uses: mad9000/actions-find-and-replace-string@2
        with:
          source: ${{ github.ref_name }}
          find: '/'
          replace: '-'

      - name: Display issue name
        run: echo ${{ steps.slash.outputs.value }}

      - name: Build Image
        run: |
          cp .env.example .env
          docker compose -f docker-compose.nginx.yml build
          docker compose -f docker-compose.nginx.yml run composer composer install --no-dev --no-interaction --no-progress --optimize-autoloader
          docker compose -f docker-compose.nginx.yml run yarn bash -c 'cd /app && yarn install && yarn build'
          docker build . -t udoit:latest -f build/nginx/Dockerfile.build
          docker tag udoit:latest ${{ env.REGISTRY }}/${{ steps.case.outputs.lowercase }}:${{ steps.slash.outputs.value }}

          docker push ${{ env.REGISTRY }}/${{ steps.case.outputs.lowercase }}:${{ steps.slash.outputs.value }}
